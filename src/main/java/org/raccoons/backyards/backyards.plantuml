@startuml

title __BACKYARDS's Class Diagram__\n

  package org.raccoons.backyards {
    class Circle {
        - radius : double
        + toString()
        + withCenter()
        + withRadius()
        ~ Circle()
        - Circle()
    }
  }
  

  package org.raccoons.backyards {
    class Color {
    }
  }
  

  package org.raccoons.backyards {
    class GeometryShapes {
        {static} + main()
    }
  }
  

  package org.raccoons.backyards {
    class LAFDefaults {
        {static} - ourInstance : LAFDefaults
        {static} + getInstance()
        - LAFDefaults()
        + fill()
    }
  }
  

  package org.raccoons.backyards {
    class Layer {
        - layerId : int
        - layerName : String
        - layerNodes : List<Node>
        + add()
        + remove()
        + draw()
        + iterator()
        + withName()
        + withStyle()
        + clone()
        ~ Layer()
        - Layer()
    }
  }
  

  package org.raccoons.backyards {
    class Line {
        + toString()
        + withStart()
        + withEnd()
        ~ Line()
        - Line()
    }
  }
  

  package org.raccoons.backyards {
    class MultiLayeredImage {
        - imageLayers : List<Layer>
        + add()
        + addAll()
        + remove()
        + removeAll()
        + draw()
        + iterator()
        + MultiLayeredImage()
        + MultiLayeredImage()
    }
  }
  

  package org.raccoons.backyards {
    class Node {
        - nodeId : int
        + toString()
        + withStyle()
        + withTransformation()
        + withShape()
        ~ Node()
        - Node()
    }
  }
  

  package org.raccoons.backyards {
    abstract class Paint {
    }
  }
  

  package org.raccoons.backyards {
    class Point {
        - coordinateX : double
        - coordinateY : double
        + toString()
        + withX()
        + withY()
        + Point()
        - Point()
    }
  }
  

  package org.raccoons.backyards {
    class Rectangle {
        - width : double
        - height : double
        + toString()
        + withPosition()
        + withWidth()
        + withHeight()
        ~ Rectangle()
        - Rectangle()
    }
  }
  

  package org.raccoons.backyards {
    class Shape {
        + toString()
        ~ Shape()
    }
  }
  

  package org.raccoons.backyards {
    class Stroke {
        - width : double
    }
  }
  

  package org.raccoons.backyards {
    class Style {
        - visible : boolean
        - optacity : double
        + toString()
        + withVisible()
        + withOptacity()
        ~ Style()
        - Style()
    }
  }
  

  package org.raccoons.backyards {
    class Transformation {
        - rotation : double
        - scale : double
        + toString()
        ~ Transformation()
    }
  }
  

  Circle -up-|> Shape
  Circle o-- Point : center
  Color -up-|> Paint
  Layer -up-|> Iterable
  Layer o-- Style : layerStyle
  Line -up-|> Shape
  Line o-- Point : start
  Line o-- Point : end
  MultiLayeredImage -up-|> Iterable
  Node o-- Shape : nodeShape
  Node o-- Style : nodeStyle
  Node o-- Transformation : nodeTransformation
  Point -up-|> Shape
  Rectangle -up-|> Shape
  Rectangle o-- Point : position
  Shape o-- Paint : fill
  Stroke o-- Paint : color


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
